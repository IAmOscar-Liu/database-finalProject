{"version":3,"sources":["components/Header.js","components/Scroll.js","components/GridItems.js","components/MovieContext.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["Header","animRef","React","createRef","useEffect","current","childNodes","forEach","e","spanAnimation","setInterval","setTimeout","classList","add","remove","className","ref","style","Scroll","GridItems","movies","map","_data","key","title","src","poster_path","alt","vote_average","Math","floor","price","MovieContext","createContext","MovieProvider","props","useState","popular","1","2","3","4","5","top_rated","setMovies","Provider","value","children","Grid","useContext","isLoading","setIsLoading","searchType","setSearchType","pageIndex","setPageIndex","toggleSearchType","prev","changePageIndex","newPage","fetchMovies","a","console","log","axios","get","result","data","d","random","nowMovies","onClick","width","textAlign","App","users","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfbde10c.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport './Header.css';\n\nfunction Header() {\n    const animRef = React.createRef();\n    useEffect(() => {\n      // console.log(animRef.current.childNodes); \n      animRef.current.childNodes.forEach(e=>{ \n      // document.querySelectorAll('.header-container > div > div span').forEach(e=>{\n        spanAnimation(e);\n        setInterval(() =>spanAnimation(e), 6200);\n      })\n    })\n\n    const spanAnimation = (e) =>{\n        setTimeout(()=>{\n            e.classList.add('anim');\n        },100)\n        setTimeout(()=>{\n            e.classList.add('fadeout');\n        },5100)\n        setTimeout(()=>{\n            e.classList.remove('anim');\n            e.classList.remove('fadeout');\n        },6100)        \n    }\n\n    return (\n    <div className='header-container'> \n      <div>\n        <div ref={animRef}>\n            <span style={{\"--span-index\":1}}>W</span>\n            <span style={{\"--span-index\":2}}>E</span>\n            <span style={{\"--span-index\":3}}>L</span>\n            <span style={{\"--span-index\":4}}>C</span>\n            <span style={{\"--span-index\":5}}>O</span>\n            <span style={{\"--span-index\":6}}>M</span>\n            <span style={{\"--span-index\":7}}>E</span>\n            <span style={{\"--span-index\":8}}></span>\n            <span style={{\"--span-index\":9}}>H</span>\n            <span style={{\"--span-index\":10}}>E</span>\n            <span style={{\"--span-index\":11}}>R</span>\n            <span style={{\"--span-index\":12}}>E</span>\n        </div>\n      </div>  \n    </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './Scroll.css';\n\nfunction Scroll() {\n    return (\n        <div className=\"scroll-container\">\n            <h1>Pick your favorite movie here!</h1>\n            <div className=\"scroll-container-leftChild\">\n                <div>\n                    <h1>Pick your favorite movie here!</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Scroll\n","import React from 'react'\nimport './GridItems.css';\n\nfunction GridItems({movies}) {\n    return movies.map(_data => \n      <div key={_data.title} className=\"grid-item\">\n        <img src={`http://image.tmdb.org/t/p/w500/${_data.poster_path}`} alt=\"\" />\n        <p><span>Title: </span><span>${_data.title}</span></p>\n        <div>\n          <span>Rating: </span>\n          <div className=\"star-container\" style={{'--star-rating': _data.vote_average/2, '--star-rating-floor': Math.floor(_data.vote_average/2)}}>\n            <div className=\"star-cover\">\n                <div>\n                    <div className=\"star highlight-star\"></div>\n                    <div className=\"star highlight-star\"></div>\n                    <div className=\"star highlight-star\"></div>\n                    <div className=\"star highlight-star\"></div>\n                    <div className=\"star highlight-star\"></div>\n                </div>\n            </div>\n            <div className=\"star\"></div>\n            <div className=\"star\"></div>\n            <div className=\"star\"></div>\n            <div className=\"star\"></div>\n            <div className=\"star\"></div>\n          </div>  \n        </div>\n        <p><span>Price: $</span><span>${_data.price}</span></p>\n        <button >See more</button>\n      </div>\n    )  \n}\n\nexport default GridItems\n","import React, { useState, createContext } from 'react';\n\nexport const MovieContext = createContext();\n\nexport const MovieProvider = props => {\n    const [movies, setMovies] = useState({\n        popular: {\n            1: null,\n            2: null,\n            3: null,\n            4: null,\n            5: null\n        },\n        top_rated: {\n            1: null,\n            2: null,\n            3: null,\n            4: null,\n            5: null \n        }\n    })\n\n    return(\n        <MovieContext.Provider value={[movies, setMovies]} >\n            {props.children}\n        </MovieContext.Provider>\n    )\n}","import React, {useContext, useState, useEffect} from 'react';\nimport './Grid.css';\nimport GridItems from './GridItems';\nimport {MovieContext} from './MovieContext';\nimport axios from 'axios';\n\n// `https://api.themoviedb.org/3/movie/${searchType}?api_key=5fb93387541fc093f329bc1481d3b3e8&language=en-US&page=${pageIndex}`\n\nfunction Grid() {\n    const [movies, setMovies] = useContext(MovieContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const [searchType, setSearchType] = useState('top_rated');\n    const [pageIndex, setPageIndex] = useState(1);\n\n    const toggleSearchType = () => {\n        setPageIndex(prev => 1);\n        setSearchType(prev => prev === 'top_rated' ? 'popular' : 'top_rated');\n    }\n\n    const changePageIndex = newPage => {\n        if(newPage === 'next' && pageIndex < 5){\n            setPageIndex(prev => prev+1);\n            //fetchMovies();\n            return;\n        }\n        if(newPage === 'prev' && pageIndex > 1){\n            setPageIndex(prev => prev-1);\n            //fetchMovies();\n            return;\n        }\n        setPageIndex(prev => newPage);\n        //fetchMovies();\n    }\n\n    const fetchMovies = async() => {\n        \n        if(movies[searchType][pageIndex]) return;\n        console.log('start fetching');\n\n        try{\n            setIsLoading(true);\n            const result = await axios.get(`/search_movies/${searchType}/${pageIndex}`);\n            //const result = await axios.get('/search_movies');\n            let data = result.data.data;\n            data.forEach(d => {\n                d.price = Math.floor(Math.random()*100+100);\n            })\n            console.log(data);\n            let nowMovies = movies;\n            nowMovies[searchType][pageIndex] = data;\n            setMovies(nowMovies);\n            setIsLoading(false)\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        fetchMovies();\n        return () => {         \n        };\n    }, [searchType, pageIndex])\n\n    return (\n    <div className=\"grid-outer-container\">\n        <div className=\"button-group\">\n            <button onClick={()=>changePageIndex('prev')}>Prev</button>\n            <button className={pageIndex===1 ? 'active' : ''} onClick={()=>changePageIndex(1)}>1</button>\n            <button className={pageIndex===2 ? 'active' : ''} onClick={()=>changePageIndex(2)}>2</button>\n            <button className={pageIndex===3 ? 'active' : ''} onClick={()=>changePageIndex(3)}>3</button>\n            <button className={pageIndex===4 ? 'active' : ''} onClick={()=>changePageIndex(4)}>4</button>\n            <button className={pageIndex===5 ? 'active' : ''} onClick={()=>changePageIndex(5)}>5</button>\n            <button onClick={()=>changePageIndex('next')}>Next</button>\n        </div>\n\n        <div className=\"movieType-btn-container\">\n            <button className={searchType === 'top_rated' ? 'active' : ''} onClick={()=>toggleSearchType()}>Top Rated</button>\n            <button className={searchType === 'top_rated' ? '' : 'active'} onClick={()=>toggleSearchType()}>Popular</button>\n        </div>\n        \n        <div className=\"shoppinglist-btn-container\">\n            <button>Shopping list</button>\n        </div>\n\n        {isLoading || movies[searchType][pageIndex]===null ? <h1 style={{width: '100%', textAlign:'center'}}>Loading...</h1> : \n          <div className=\"grid-container\">\n            <GridItems movies={movies[searchType][pageIndex]} />\n          </div>\n        }\n\n        <div className=\"button-group bottom\">\n        <button onClick={()=>changePageIndex('prev')}>Prev</button>\n        <button className={pageIndex===1 ? 'active' : ''} onClick={()=>changePageIndex(1)}>1</button>\n            <button className={pageIndex===2 ? 'active' : ''} onClick={()=>changePageIndex(2)}>2</button>\n            <button className={pageIndex===3 ? 'active' : ''} onClick={()=>changePageIndex(3)}>3</button>\n            <button className={pageIndex===4 ? 'active' : ''} onClick={()=>changePageIndex(4)}>4</button>\n            <button className={pageIndex===5 ? 'active' : ''} onClick={()=>changePageIndex(5)}>5</button>\n            <button onClick={()=>changePageIndex('next')}>Next</button>\n        </div>\n    </div>\n    )\n}\n\nexport default Grid\n","import React ,{ useState }from 'react';\nimport './App.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n//import {Button, ButtonToolbar, Table} from 'react-bootstrap';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Scroll from './components/Scroll';\nimport Grid from './components/Grid';\nimport {MovieProvider} from './components/MovieContext';\n\nfunction App() {\n  \n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadedData, setLoadedData] = useState({ users: null});\n  \n\n  const handleGetUsers = async () => {\n    try{\n      const result = await axios.get('/get_users');\n      \n      const data = result.data;\n      console.log(data);\n      setLoadedData({users : data});\n      setIsLoaded(true);\n    }catch(err){\n        console.log(err);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <Scroll />\n      <MovieProvider>\n        <Grid /> \n      </MovieProvider>  \n    </div>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}